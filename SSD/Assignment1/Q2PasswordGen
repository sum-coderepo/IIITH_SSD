#!/bin/bash
if [ $# -eq 1 ]; then
        length=$1
else
        length=20
fi

if [ $length -lt 6 ] || [ $length -gt 20 ] ; then
  echo "Length of the password" $length
  echo "Provide a valid number between 6 and 20"
  exit
  fi

#arr=()
arr=($(seq 1 $((length))))

digits=({0..9})
lower=({a..k} {m..n} {p..z})
upper=({A..N} {P..Z})
special=('~' '`' '#' '$' '&' '(' ')' '\' '|' '[' ']' '{' '}' ';' "'" '"' '<' '>' '/' '?' '!')

lowerlen=${#lower[*]}
Upperlen=${#upper[*]}
digitslen=${#digits[*]}
Speciallen=${#special[*]}


CharArray=(${digits[*]} ${lower[*]} ${upper[*]} ${special[*]})
aplhaArray=(${lower[*]} ${upper[*]})

CharArrayLength=${#CharArray[*]}
aplhaArrayLength=${#aplhaArray[*]}

password=""
firstIndex=$(($RANDOM%$aplhaArrayLength))
char=${aplhaArray[$firstIndex]}
# password=${password}${char}
arr[0]=$char
#printf '%s\n' "${arr[@]}"
#echo $password
if [[ "${upper[*]}" =~ "${char}" ]]; then
      lastIndex=$(($RANDOM%$lowerlen))
      last=${lower[$lastIndex]}
      arr[$((length-1))]=$last
  else
      lastIndex=$(($RANDOM%$Upperlen))
      last=${upper[$lastIndex]}
      arr[$((length-1))]=$last
  fi


criteria1=( 1 2 3 4 )
criteria2=( $(shuf -e "${criteria1[@]}") )

func(){

    choice=$1
    #echo "Called " $choice
    if [ $choice -eq 1 ] ; then
    Index=$(($RANDOM%$lowerlen))
    char=${lower[$Index]}
    echo $char

    elif [ $choice -eq 2 ] ; then
    Index=$(($RANDOM%$Upperlen))
    char=${upper[$Index]}
    echo $char

    elif [ $choice -eq 3 ] ; then
    Index=$(($RANDOM%$digitslen))
    char=${digits[$Index]}
    echo $char

    elif [ $choice -eq 4 ] ; then
    Index=$(($RANDOM%$Speciallen))
    char=${special[$Index]}
    echo $char
    fi

}


check_start(){
  index=$1
  prev_index=$(($index-1))
  value=$2
   #echo $1 $2
  flag="True"

  if [[  "${digits[*]}" =~ "${value}" ]]; then # # whatever you want to do when array contains value
      #echo "here 1"
      if [[  "${lower[*]}" =~ ${arr[$prev_index]}  ]] ; then # # whatever you want to do when array contains value
        #echo "here 2"
        flag="False"
        #echo $flag
        fi
  elif [[  "${lower[*]}" =~ "${value}" ]]; then
      #echo "here 3"
      if [  $value == ${arr[$prev_index]} ] | [[ "${digits[*]}" =~ ${arr[$prev_index]} ]]    ; then
        #echo "here 4"
    flag="False"
    #echo $flag
    fi
  elif [[  "${special[*]}" =~ "${value}" ]]; then
     #echo "here 5"
        if [[  "${special[*]}" =~ ${arr[$prev_index]} ]] ; then
          #echo "here 6"
        flag="False"
        #echo $flag
        fi

      elif [ $index -eq $((length-2)) ]; then
        if [[  "${lower[*]}" =~ ${arr[$((length-1))]} ]]  && [[  "${lower[*]}" =~ "${value}" ]]; then
        flag="False"
        fi

  fi
  echo $flag

}

set=1

criteriaiter=0


for i in `seq 1 $length`
do
        while [ $set -eq 1 ]; do

          if [ ${#criteria2[*]} -gt 0 ]; then

              echo "New Lenghtaaa: " "${#criteria2[*]}"
              val=${criteria2[$criteriaiter]}
              echo "heyyy" $criteriaiter $val

              char=$(func $val)
              echo $char
              VAR=$(check_start $i $char)

           if [[ $VAR != "True" ]]; then
             index=$(($RANDOM%$CharArrayLength))
             char=${CharArray[$index]}
            fi
        else
          index=$(($RANDOM%$CharArrayLength))
          char=${CharArray[$index]}
        fi
        echo "Trying for: " $char
        VAR=$(check_start $i $char)
        echo $VAR $i "starterd"

        if [[ $VAR == "True" ]]; then
          echo "UUUU"
          unset 'criteria2[$criteriaiter]'
          echo "New Lenght2: " ${#criteria2[*]}
          criteriaiter=$((criteriaiter+1))
          arr[$i]=$char
          echo "Password so far: " "${arr[*]}"
          set=0
          echo "FInished"
        fi
        done
        set=1

done
# echo $password
printf '%s\n' "${my_array[@]}"